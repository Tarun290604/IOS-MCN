FROM ubuntu:jammy AS ran-base

ARG NEEDED_GIT_PROXY
ARG TARGETARCH
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/Paris
ENV BUILD_UHD_FROM_SOURCE=True
ENV UHD_VERSION=4.4.0.0
ENV TINI_VERSION=v0.19.0

# Install base dependencies
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get upgrade --yes && \
    DEBIAN_FRONTEND=noninteractive apt-get install --yes \
        libnetconf2-dev \
        libxml2-dev \
        libssh-dev \
        build-essential \
        psmisc \
        git \
        gcc-12 \
        g++-12 \
        xxd \
        libpcre2-dev \
        python3-dev \
        bison \
        flex \
        m4 \
        python3-pip \
        wget \
        xz-utils \
        libnuma-dev \
        meson \
        pkg-config && \
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100 --slave /usr/bin/g++ g++ /usr/bin/g++-12 && \
    pip3 install --ignore-installed pyyaml && \
    rm -rf /var/lib/apt/lists/*


# Add Tini - Signal handling for containers
RUN mkdir -p /usr/local/bin && \
    wget https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} -O /usr/local/bin/tini && \
    chmod +x /usr/local/bin/tini


# Configure GIT Proxy if required
RUN /bin/bash -c 'if [ -n "$NEEDED_GIT_PROXY" ]; then git config --global http.proxy "$NEEDED_GIT_PROXY"; fi'

# DPDK Installation
WORKDIR /dpdk
RUN wget http://fast.dpdk.org/rel/dpdk-20.11.9.tar.xz && \
    tar xvf dpdk-20.11.9.tar.xz

WORKDIR /dpdk/dpdk-stable-20.11.9
RUN meson build && \
    ninja -C build && \
    ninja install -C build && \
    echo "/usr/local/lib" > /etc/ld.so.conf.d/local-lib.conf && \
    echo "/usr/local/lib64" >> /etc/ld.so.conf.d/local-lib.conf && \
    ldconfig

# Validate DPDK installation
RUN pkg-config --libs libdpdk --static

# PHY Integration and Patching
WORKDIR /phy
RUN git clone https://gerrit.o-ran-sc.org/r/o-du/phy.git phy

WORKDIR /phy/phy
RUN git checkout oran_e_maintenance_release_v1.0

# Apply integration patches
COPY cmake_targets/tools/oran_fhi_integration_patches/E/oaioran_E.patch .
COPY cmake_targets/tools/oran_fhi_integration_patches/E/iisc_oaioran_E.patch .
RUN git apply oaioran_E.patch && \
    git apply iisc_oaioran_E.patch

WORKDIR /phy/phy/fhi_lib/lib
RUN RTE_SDK=/dpdk/dpdk-stable-20.11.9 XRAN_DIR=/phy/phy/fhi_lib make

# RAN Build Environment Setup
WORKDIR /oai-ran/cmake_targets/tools
COPY cmake_targets/tools/build_helper \
     cmake_targets/tools/uhd-4.x-tdd-patch.diff \
     ./

WORKDIR /oai-ran/cmake_targets
COPY cmake_targets/build_oai .

WORKDIR /oai-ran
COPY oaienv .

# Build OAI RAN with USRP and optional packages
RUN /bin/sh oaienv && \
    cd cmake_targets && \
    mkdir -p log && \
    ./build_oai -I -w USRP --install-optional-packages
